name: production
      
# Controls when the action will run. 
on:
  # Triggers the workflow on push to dev
  push:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the Actions tag
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # The var determines namespace which we use next in the pipeline
    env:
      MENV : production
      IMGNAME: abelovn/my_registry_prod
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      - uses: actions/checkout@v2

      - name: SonarQube Scan
        uses: kitabisa/sonarqube-action@v1.1.0
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}
          
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image:    $IMGNAME
          tags:     myapp, latest
          registry: docker.io
          # SET env var which we use in dockerfile as ARG to use in container
          buildArgs: BRANCH=main
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
    
      - name: Deploy to Kubernetes cluster                                                              
        uses: kodermax/kubectl-aws-eks@master
        env:           

          KUBECTL_VERSION: "v1.23.6" 
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: rollout restart deployment/web -n $MENV  

      - name: Update deployment app
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBECTL_VERSION: "v1.23.6"
          
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f k8s/app-depl-prod.yml -n $MENV

      - name: HorizontalPodAutoscaler
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBECTL_VERSION: "v1.23.6"
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f k8s/app-hpa-prod.yml -n $MENV 


      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7.7'
          
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install pip install requests
          
      - name: execute py script # run sj-gobierno.py to get the latest data
        run: python smoketest.py        





      - name: Update load balancer
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBECTL_VERSION: "v1.23.6"
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f k8s/app-loadbalancer-prod.yml -n $MENV   
