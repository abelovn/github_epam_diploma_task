name: test
      
# Controls when the action will run. 
on:
  # Triggers the workflow on push to dev
  push:
    branches-ignore: [ main ]
    
  # Allows you to run this workflow manually from the Actions tag
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    runs-on: ubuntu-latest
    
    
    # The var determines namespace which we use next in the pipeline
    env:

      MENV : feature-sonarcube
      IMGNAME: abelovn/my_registry
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      - uses: actions/checkout@v2

      # - name: SonarQube Scan
      #   uses: kitabisa/sonarqube-action@v1.1.0
      #   with:
      #     host: ${{ secrets.SONARQUBE_HOST }}
      #     login: ${{ secrets.SONARQUBE_TOKEN }}

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
        timeout-minutes: 5
        env:
         SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image:    $IMGNAME
          tags:     latest
          registry: docker.io
          # SET env var which we use in dockerfile as ARG to use in container
          buildArgs: BRANCH=$MENV
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
    
      - name: Deploy to Kubernetes cluster                                                              
        uses: kodermax/kubectl-aws-eks@master
        env:           
          KUBECTL_VERSION: "v1.23.6" 
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: rollout restart deployment/web -n development  


      - name: Update deployment app
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBECTL_VERSION: "v1.23.6"
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f k8s/app-depl.yml -n development



      - name: HorizontalPodAutoscaler
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBECTL_VERSION: "v1.23.6"
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f k8s/app-hpa.yml -n development    

      - name: Update load balancer
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBECTL_VERSION: "v1.23.6"
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f k8s/app-loadbalancer.yml -n development   
